(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 1000)
# Create test data
X <- data.frame(x = x)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(x, y, type = 'l')
lines(x, ysim, type = 'l', col = 'red')
plotAHN(ahn)
# Create data
t <- seq(0, 15, 0.01)
X <- data.frame(x1 = cos(t), x2 = t)
Y <- data.frame(y = sin(t))
# Create the Sigma dataset
Sigma <- list(X = X, Y = Y)
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 500)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(seq_along(Y$y), Y$y, type = 'l', col = 'black')
lines(seq_along(ysim), ysim, col = 'red')
plotAHN(ahn)
devtools::document()
devtools::document()
devtools::document()
library(ahnr)
?split
?do.call
devtools::document()
library(ahnr)
devtools::document()
library(ahnr)
devtools::document()
library(ahnr)
class(ahn)
devtools::document()
library(ahnr)
library(ahnr)
# Create data
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 1000)
# Create test data
X <- data.frame(x = x)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(x, y, type = 'l')
lines(x, ysim, type = 'l', col = 'red')
plotAHN(ahn)
class(ahn)
devtools::document()
library(ahnr)
methods('plot')
library(ahnr)
# Create data
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 1000)
# Create test data
X <- data.frame(x = x)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(x, y, type = 'l')
lines(x, ysim, type = 'l', col = 'red')
plot(ahn)
devtools::document()
library(ahnr)
devtools::document()
library(ahnr)
?SimAHNnD
devtools::document()
?SimAHNnD
?split
devtools::document()
?SimAHNnD
devtools::document()
?SimAHNnD
library(ahnr)
?plot.acf
?summary.lm
devtools::document()
library(ahnr)
summary.lm
summary.aov
devtools::document()
library(ahnr)
summary(ahn)
devtools::document()
library(ahnr)
devtools::document()
library(ahnr)
ahn$network$n
ahn$network$Pi
ahn$network$H$molecule1
devtools::document()
library(ahnr)
summary(ahn)
devtools::document()
library(ahnr)
library(ahnr)
# Create data
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 1000)
# Create test data
X <- data.frame(x = x)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(x, y, type = 'l')
lines(x, ysim, type = 'l', col = 'red')
devtools::document()
library(ahnr)
summary(ahn)
devtools::document()
library(ahnr)
summary(ahn)
devtools::document()
library(ahnr)
summary(ahn)
ahn$network$Pi
cat(ahn$network$Pi)
print(ahn$network$Pi)
library(ahnr)
library(ahnr)
# Create data
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 1000)
# Create test data
X <- data.frame(x = x)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(x, y, type = 'l')
lines(x, ysim, type = 'l', col = 'red')
library(ahnr)
summary(ahn)
library(ahnr)
summary(ahn)
library(ahnr)
summary(ahn)
ahn$network$Pi
as.table(ahn$network$Pi)
# Create data
t <- seq(0, 15, 0.01)
X <- data.frame(x1 = cos(t), x2 = t)
Y <- data.frame(y = sin(t))
# Create the Sigma dataset
Sigma <- list(X = X, Y = Y)
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 500)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(seq_along(Y$y), Y$y, type = 'l', col = 'black')
lines(seq_along(ysim), ysim, col = 'red')
ahn$network$Pi
library(ahnr)
# Create data
t <- seq(0, 15, 0.01)
X <- data.frame(x1 = cos(t), x2 = t)
Y <- data.frame(y = sin(t))
# Create the Sigma dataset
Sigma <- list(X = X, Y = Y)
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 500)
head(dist)
head(moleculeNumber)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(seq_along(Y$y), Y$y, type = 'l', col = 'black')
lines(seq_along(ysim), ysim, col = 'red')
devtools::document()
library(ahnr)
# Create data
t <- seq(0, 15, 0.01)
X <- data.frame(x1 = cos(t), x2 = t)
Y <- data.frame(y = sin(t))
# Create the Sigma dataset
Sigma <- list(X = X, Y = Y)
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 500)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(seq_along(Y$y), Y$y, type = 'l', col = 'black')
lines(seq_along(ysim), ysim, col = 'red')
summary(ahn)
names(Sigma)
summary(ahn)
summary(ahn)
# Create data
t <- seq(0, 15, 0.01)
X <- data.frame(x1 = cos(t), x2 = t)
Y <- data.frame(y = sin(t))
# Create the Sigma dataset
Sigma <- list(X = X, Y = Y)
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 500)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(seq_along(Y$y), Y$y, type = 'l', col = 'black')
lines(seq_along(ysim), ysim, col = 'red')
devtools::document()
library(ahnr)
# Create data
t <- seq(0, 15, 0.01)
X <- data.frame(x1 = cos(t), x2 = t)
Y <- data.frame(y = sin(t))
# Create the Sigma dataset
Sigma <- list(X = X, Y = Y)
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 500)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(seq_along(Y$y), Y$y, type = 'l', col = 'black')
lines(seq_along(ysim), ysim, col = 'red')
summary(ahn)
centers
summary.lm
prueba <- lm(Y~X, data=Sigma)
head(Sigma)
prueba <- lm(Sigma$Y ~ Sigma$X)
prueba <- lm(Y~X, data = data.frame(X = Sigma$X, Y = Sigma$Y))
head(Sigma$Y)
prueba <- lm(y~X, data = data.frame(X = Sigma$X, y = Sigma$Y))
prueba <- lm(y~x, data = data.frame(x = Sigma$X, y = Sigma$Y))
head(Sigma$X)
prueba <- lm(y~x1+x2, data = cbind(Sigma$Y, Sigma$X))
summary(lm)
summary(prueba)
summary.lm
a <- summary(prueba)
class(a)
a$call
print.summaryDefault
print.table
prueba
print.lm
prueba2 <- list(a = c(1,2,3), b = ahn$network$Pi)
prueba2
as.table(prueba2)
print(prueba2)
table(prueba2)
library(ahnr)
# Create data
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 1000)
# Create test data
X <- data.frame(x = x)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(x, y, type = 'l')
lines(x, ysim, type = 'l', col = 'red')
plot(ahn)
# Create data
t <- seq(0, 15, 0.01)
X <- data.frame(x1 = cos(t), x2 = t)
Y <- data.frame(y = sin(t))
# Create the Sigma dataset
Sigma <- list(X = X, Y = Y)
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 500)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(seq_along(Y$y), Y$y, type = 'l', col = 'black')
lines(seq_along(ysim), ysim, col = 'red')
cat(list(a = c(1,23,4), b = ahn$network$Pi))
print.summary.lm
head(Sigma$X)
prueba <- lm(y ~ x1 + x2, data = cbind(Sigma$X, Sigma$Y))
prueba
p <- list(a = c(1,2,3), b = ahn$network$Pi)
do.call(p, print)
prueba
do.call(p, print)
p
getAnywhere(print.summary.lm)
summary(prueba)
printCoefmat
library(ahnr)
summary(ahn)
library(ahnr)
summary(ahn)
summary(prueba)
library(ahnr)
summary(ahn)
library(ahnr)
devtools::document()
CreateTable(ahn)
molecule_split
dplyr::bind_rows(molecule_split)
dplyr::bind_rows(molecule_split)
names(molecule_split)
as.table(molecule_split)
as.data.frame(molecule_split)
devtools::document()
library(ahnr)
summary(ahn)
devtools::document()
library(ahnr)
summary(ahn)
devtools::document()
library(ahnr)
summary(ahn)
devtools::document()
library(ahnr)
summary(ahn)
devtools::document()
library(ahnr)
summary(ahn)
devtools::document()
library(ahnr)
?plot.acf
?visNetwork::visNetwork
?visNetwork::visGroup
?visNetwork::visGroups
devtools::document()
library(ahnr)
library(ahnr)
# Create data
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 1000)
# Create test data
X <- data.frame(x = x)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(x, y, type = 'l')
lines(x, ysim, type = 'l', col = 'red')
library(ahnr)
# Create data
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 1000)
# Create test data
X <- data.frame(x = x)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(x, y, type = 'l')
lines(x, ysim, type = 'l', col = 'red')
summary(ahn)
summary(ahn)
summary(ahn)
summary(ahn)
summary(ahn)
devtools::document()
library(ahnr)
summary(ahn)
summary(ahn)
summary(ahn)
library(ahnr)
summary(ahn)
ahn$variableNames
Sigma$X
devtools::document()
library(ahnr)
library(ahnr)
# Create data
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 1000)
# Create test data
X <- data.frame(x = x)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(x, y, type = 'l')
lines(x, ysim, type = 'l', col = 'red')
summary(ahn)
plot(ahn)
# Create data
t <- seq(0, 15, 0.01)
X <- data.frame(x1 = cos(t), x2 = t)
Y <- data.frame(y = sin(t))
# Create the Sigma dataset
Sigma <- list(X = X, Y = Y)
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 500)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(seq_along(Y$y), Y$y, type = 'l', col = 'black')
lines(seq_along(ysim), ysim, col = 'red')
summary(ahn)
plot(ahn)
devtools::document()
library(ahnr)
library(rstan)
example("stan_model", package = "rstan", run.dontrun = TRUE)
library(ahnr)
library(ahnr)
library(ahnr)
library(ahnr)
library(ahnr)
# Create data
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 1000)
# Create test data
X <- data.frame(x = x)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(x, y, type = 'l')
lines(x, ysim, type = 'l', col = 'red')
summary(ahn)
plot(ahn)
# Create data
t <- seq(0, 15, 0.01)
X <- data.frame(x1 = cos(t), x2 = t)
Y <- data.frame(y = sin(t))
# Create the Sigma dataset
Sigma <- list(X = X, Y = Y)
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 500)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(seq_along(Y$y), Y$y, type = 'l', col = 'black')
lines(seq_along(ysim), ysim, col = 'red')
# Create data
t <- seq(0, 15, 0.01)
X <- data.frame(x1 = cos(t), x2 = t)
Y <- data.frame(y = sin(t))
# Create the Sigma dataset
Sigma <- list(X = X, Y = Y)
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 1000)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(seq_along(Y$y), Y$y, type = 'l', col = 'black')
lines(seq_along(ysim), ysim, col = 'red')
summary(ahn)
plot(ahn)
library(ahnr)
library(ahnr)
library(ahnr)
devtools::build_win()
library(ahnr)
devtools::build_win()
