x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 1000)
lm <- lm(y ~ x)
summary(lm)
plotAHN(ahn)
plotAHN(ahn)
plotAHN(ahn)
plotAHN(ahn)
plotAHNDyn(ahn)
# Create data
t <- seq(0, 15, 0.01)
X <- data.frame(x1 = cos(t), x2 = t)
Y <- data.frame(y = sin(t))
# Create the Sigma dataset
Sigma <- list(X = X, Y = Y)
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 500)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(seq_along(Y$y), Y$y, type = 'l', col = 'black')
lines(seq_along(ysim), ysim, col = 'red')
ahn$network$H$molecule1
lst <- list(x = pi ^ (1:5), y = matrix(rnorm(9), 3))
lst
lst.str
lst['z'] <- 'hola'
lst
lst[['a']] <- 'adios'
lst
ls.str(lst)
str(lst)
writeLines("hello\n\U1F30D")
cat(3)
class(cat(2))
typeof(cat(3))
writeLines("\u0928\u092e\u0938\u094d\u0924\u0947 \u0926\u0941\u0928\u093f\u092f\u093e")
partial <- vector('numeric', 10000)
sum <- 0
for (i in seq_len(10000)) {
sum <- 1/i
for (i in seq_len(10000)) {
sum <- sum + (1/i)
partial[i] <- sum / i}
plot(partial)
partial[10000]
library(ahnr)
library(ahnr)
# Create data
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 1000)
plotAHN(ahn)
plotAHN(ahn)
vis
graph
?igraph::graph_from_data_frame
gr <- graph_from_data_frame(flare$edges, vertices = flare$vertices)
gr <- igraph::graph_from_data_frame(flare$edges, vertices = flare$vertices)
plotAHN(ahn)
graph
summary(graph)
str(graph)
vis
plotAHN(ahn)
plotAHN(ahn)
ggraph(graph, layout = 'graphopt') +
geom_edge_link(aes(start_cap = label_rect(node1.name),
end_cap = label_rect(node2.name))) +
geom_node_text(label = vis$nodes$label) +
theme_void()
ggraph(graph, layout = 'graphopt') +
geom_edge_link(aes(start_cap = label_rect(node1.name),
end_cap = label_rect(node2.name))) +
geom_node_text(label = vis$nodes$label, col = "red") +
theme_void()
node1.name
graph$node1.name
graph
attr(graph)
attributes(graph)
graph[[1]]
graph[[2]]
graph[[3]]
graph[[10]]
graph[[11]]
library(ahnr)
plotAHN(ahn)
plotAHNDyn(ahn)
library(ahnr)
plotAHN(ahn)
vis
devtools::document()
library(ahnr)
plotAHN(ahn)
plotAHN(ahn)
plotAHNDyn(ahn)
devtools::use_package('magrittr')
devtools::document()
library(ahnr)
plotAHNDyn(ahn)
library(ahnr)
plotAHNDyn(ahn)
library(ahnr)
devtools::document()
library(ahnr)
plotAHNDyn(ahn)
library(ahnr)
plotAHNDyn(ahn)
library(ahnr)
# Create data
t <- seq(0, 15, 0.01)
X <- data.frame(x1 = cos(t), x2 = t)
Y <- data.frame(y = sin(t))
# Create the Sigma dataset
Sigma <- list(X = X, Y = Y)
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 500)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(seq_along(Y$y), Y$y, type = 'l', col = 'black')
lines(seq_along(ysim), ysim, col = 'red')
library(ahnr)
# Create data
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 1000)
# Create data
t <- seq(0, 15, 0.01)
X <- data.frame(x1 = cos(t), x2 = t)
Y <- data.frame(y = sin(t))
# Create the Sigma dataset
Sigma <- list(X = X, Y = Y)
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 500)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(seq_along(Y$y), Y$y, type = 'l', col = 'black')
lines(seq_along(ysim), ysim, col = 'red')
plotAHNDyn(ahn)
ahn$network$H$molecule1
ahn$network$H$molecule2
label
ahn$Yo
head(ahn$Ym)
ahn$network$C
ahn$network$n
ahn$network$Pi
plotAHNDyn(ahn)
ahn$network$H[['molecule1']]
d <- ahn$network$H[['molecule1']]
split(d, ceiling(seq_along(d)/20))
split(d, ceiling(seq_along(d)/2))
seq_along(d)
nrow(d)
ceiling(seq_along(d))
ceiling(seq_along(d)/2)
ceiling(seq_along(d)/3)
ceiling(seq_along(d)/4)
8/2
12/3
d
prueba <- split(d, seq_len(nrow(d)) / (nrow(d) / 2))
prueba
prueba <- split(d, ceiling(seq_len(nrow(d)) / (nrow(d) / 2)))
prueba
do.call(paste, prueba, sep = "-")
do.call(paste, prueba)
?do.call
do.call(paste, list(prueba, sep = "."))
do.call(paste, list(prueba, sep = "-"))
?paste
do.call(paste, prueba)
prueba
do.call(paste, list(prueba))
do.call(paste, list(prueba, sep = "-"))
lapply(prueba, paste, sep = "-")
list
prueba
stringr::str_c(prueba)
do.call(paste, c(prueba, sep = "-"))
do.call(paste, c(prueba, sep = "/"))
do.call(paste, c(prueba, sep = "\n"))
prueba
ahn$network$H[['molecule1']]
round(ahn$network$H[['molecule1']], 3)
CreateLabels <- function(molecule, dimensions) {
molecule_split <- split(molecule, ceiling(seq_len(nrow(molecule)) / (nrow(molecule) / dimensions)))
do.call(paste, c(molecule_split, sep = "\n"))
}
CreateLabels(round(ahn$network$H[['molecule1']], 3), 2)
ahn$network$H[['molecule1']][, 1]
CreateLabels(round(ahn$network$H[['molecule1']], 3), 1)
molecule <- round(ahn$network$H[['molecule1']][, 1], 3)
molecule_split <- split(molecule, ceiling(seq_len(length(molecule)) / (length(molecule) / 2)))
molecule_split
do.call(paste, c(molecule_split, sep = "\n"))
library(ahnr)
devtools::document()
library(ahnr)
# Create data
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 1000)
# Create test data
X <- data.frame(x = x)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(x, y, type = 'l')
lines(x, ysim, type = 'l', col = 'red')
# Create data
t <- seq(0, 15, 0.01)
X <- data.frame(x1 = cos(t), x2 = t)
Y <- data.frame(y = sin(t))
# Create the Sigma dataset
Sigma <- list(X = X, Y = Y)
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 500)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(seq_along(Y$y), Y$y, type = 'l', col = 'black')
lines(seq_along(ysim), ysim, col = 'red')
ahn$network$Pi
ncol(ahn$network$Pi)
library(ahnr)
# Create data
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 1000)
# Create test data
X <- data.frame(x = x)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(x, y, type = 'l')
lines(x, ysim, type = 'l', col = 'red')
plotAHNDyn(ahn)
# Create data
t <- seq(0, 15, 0.01)
X <- data.frame(x1 = cos(t), x2 = t)
Y <- data.frame(y = sin(t))
# Create the Sigma dataset
Sigma <- list(X = X, Y = Y)
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 500)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(seq_along(Y$y), Y$y, type = 'l', col = 'black')
lines(seq_along(ysim), ysim, col = 'red')
plotAHNDyn(ahn)
ahn$network$H$molecule1
writeLines("hola\nComo")
plotAHNDyn(ahn)
vis
library(ahnr)
plotAHNDyn(ahn)
ahn$network$H$molecule1
label
label
nodes
summary(nodes)
vis
visNetwork(vis$nodes, vis$edges, width = "100%")
library(ahnr)
library(ahnr)
# Create data
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 1000)
# Create data
t <- seq(0, 15, 0.01)
X <- data.frame(x1 = cos(t), x2 = t)
Y <- data.frame(y = sin(t))
# Create the Sigma dataset
Sigma <- list(X = X, Y = Y)
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 500)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(seq_along(Y$y), Y$y, type = 'l', col = 'black')
lines(seq_along(ysim), ysim, col = 'red')
plotAHNDyn(ahn)
plotAHNDyn(ahn)
devtools::document()
library(ahnr)
plotAHNDyn(ahn)
devtools::document()
library(ahnr)
plotAHN(ahn)
library(ahnr)
# Create data
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 1000)
# Create test data
X <- data.frame(x = x)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(x, y, type = 'l')
lines(x, ysim, type = 'l', col = 'red')
plotAHN(ahn)
library(ahnr)
# Create data
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 1000)
# Create test data
X <- data.frame(x = x)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(x, y, type = 'l')
lines(x, ysim, type = 'l', col = 'red')
plotAHN(ahn)
# Create data
t <- seq(0, 15, 0.01)
X <- data.frame(x1 = cos(t), x2 = t)
Y <- data.frame(y = sin(t))
# Create the Sigma dataset
Sigma <- list(X = X, Y = Y)
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 500)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(seq_along(Y$y), Y$y, type = 'l', col = 'black')
lines(seq_along(ysim), ysim, col = 'red')
plotAHN(ahn)
devtools::document()
devtools::document()
devtools::document()
library(ahnr)
?split
?do.call
devtools::document()
library(ahnr)
devtools::document()
library(ahnr)
devtools::document()
library(ahnr)
class(ahn)
devtools::document()
library(ahnr)
library(ahnr)
# Create data
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 1000)
# Create test data
X <- data.frame(x = x)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(x, y, type = 'l')
lines(x, ysim, type = 'l', col = 'red')
plotAHN(ahn)
class(ahn)
devtools::document()
library(ahnr)
methods('plot')
library(ahnr)
# Create data
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 1000)
# Create test data
X <- data.frame(x = x)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(x, y, type = 'l')
lines(x, ysim, type = 'l', col = 'red')
plot(ahn)
devtools::document()
library(ahnr)
devtools::document()
library(ahnr)
?SimAHNnD
devtools::document()
?SimAHNnD
?split
devtools::document()
?SimAHNnD
devtools::document()
?SimAHNnD
library(ahnr)
?plot.acf
?summary.lm
devtools::document()
library(ahnr)
summary.lm
summary.aov
devtools::document()
library(ahnr)
summary(ahn)
devtools::document()
library(ahnr)
devtools::document()
library(ahnr)
ahn$network$n
ahn$network$Pi
ahn$network$H$molecule1
devtools::document()
library(ahnr)
summary(ahn)
devtools::document()
library(ahnr)
library(ahnr)
# Create data
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 1000)
# Create test data
X <- data.frame(x = x)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(x, y, type = 'l')
lines(x, ysim, type = 'l', col = 'red')
devtools::document()
library(ahnr)
summary(ahn)
devtools::document()
library(ahnr)
summary(ahn)
devtools::document()
library(ahnr)
summary(ahn)
ahn$network$Pi
cat(ahn$network$Pi)
print(ahn$network$Pi)
