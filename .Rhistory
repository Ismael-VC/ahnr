(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 500)
# Create test data
X <- data.frame(x = x)
ysim <- SimAHNnD(ahn, X)
plot(x, y, type = 'l')
lines(x, ysim, type = 'l', col = 'red')
library(ahnr)
# Create data
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 500)
# Create test data
X <- data.frame(x = x)
ysim <- SimAHNnD(ahn, X)
plot(x, y, type = 'l')
lines(x, ysim, type = 'l', col = 'red')
library(ahnr)
# Create data
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 2000)
# Create test data
X <- data.frame(x = x)
ysim <- SimAHNnD(ahn, X)
plot(x, y, type = 'l')
lines(x, ysim, type = 'l', col = 'red')
library(ahnr)
library(ahnr)
# Create data
t <- seq(0, 15, 0.01)
X <- data.frame(x1 = cos(t), x2 = t)
Y <- data.frame(y = sin(t))
# Create the Sigma dataset
Sigma <- list(X = X, Y = Y)
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 2000)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(Y$y, type = 'l', col = 'black')
lines(ysim, col = 'red')
t <- seq(0, 15, 0.01)
X <- data.frame(x1 = cos(t), x2 = t)
Y <- data.frame(y = sin(t))
Sigma <- list(X = X, Y = Y)
ahn <- AHNnD(Sigma, 5, 0.01, 500)
ysim <- SimAHNnD(ahn, X)
plot(Y$y, type = 'l', col = 'black')
lines(ysim, col = 'red')
plot(Y$y, type = 'l', col = 'black')
lines(ysim, col = 'red')
plot(Y$y, type = 'l', col = 'black')
lines(ysim, col = 'red')
plot(Y$y, type = 'l', col = 'black')
lines(ysim, col = 'red')
plot(seq_along(Y$y), Y$y, type = 'l', col = 'black')
lines(seq_along(ysim), ysim, col = 'red')
plot(seq_along(Y$y), Y$y, type = 'l', col = 'black')
lines(seq_along(ysim), ysim, col = 'red')
# Create data
t <- seq(0, 15, 0.01)
X <- data.frame(x1 = cos(t), x2 = t)
Y <- data.frame(y = sin(t))
# Create the Sigma dataset
Sigma <- list(X = X, Y = Y)
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 500)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(seq_along(Y$y), Y$y, type = 'l', col = 'black')
lines(seq_along(ysim), ysim, col = 'red')
library(ahnr)
library(ahnr)
# Create data
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 1000)
?devtools::use_package
devtools::use_package('ggraph')
ahn$network$Pi
ahn$network$C
?igraph::from_data_frame
ahn$network$n
ahn$network$C$Omega
sum(ahn$network$C$Omega)
paste('C', seq_len(ahn$network$n), sep = ''
)
ahn$network$H$molecule1
?vector
paste('molecule', i, sep = '')
ahn$network$H[['molecule1']]
ahn$network$H[['molecule1', 1]]
ahn$network$H[['molecule1']][:,1]
ahn$network$H[['molecule1']][,1]
library(ahnr)
devtools::load_all(".")
CreateNodes(ahn)
devtools::load_all(".")
library(ahnr)
CreateNodes(ahn)
library(ahnr)
CreateNodes(ahn)
CreateNodes <- function(ahn) {
label = vector('numeric')
for (i in seq_len(ahn$network$n)) {
label <- c(label, ahn$network$H[[paste('molecule', i, sep = "")]][ , 1])
}
nodes <- data.frame(id = seq_len(ahn$network$n + sum(ahn$network$C$Omega)),
shape = 'circle',
shadow = FALSE,
label = label)
}
CreateNodes(ahn)
a <- CreateNodes(ahn)
a
i <- 1
paste('H', i, seq_len(ahn$network$C$Omega[i], sep = '')
)
paste('H', i, seq_len(ahn$network$C$Omega[i]), sep = '')
devtools::load_all(".")
library(ahnr)
a <- CreateNodes(ahn)
a
CreateNodes <- function(ahn) {
label <- vector('numeric')
id <- vector('character')
for (i in seq_len(ahn$network$n)) {
label <- c(label, ahn$network$H[[paste('molecule', i, sep = "")]][ , 1])
carbon <- paste('C', i, sep = '')
hydrogens <- paste('H', i, seq_len(ahn$network$C$Omega[i]), sep = '')
id <- c(id, carbon, hydrogens)
}
nodes <- data.frame(id = seq_len(ahn$network$n + sum(ahn$network$C$Omega)),
shape = 'circle',
shadow = FALSE,
label = label)
}
a <- CreateNodes(ahn)
a
CreateNodes <- function(ahn) {
label <- vector('numeric')
id <- vector('character')
for (i in seq_len(ahn$network$n)) {
label <- c(label, ahn$network$H[[paste('molecule', i, sep = "")]][ , 1])
carbon <- paste('C', i, sep = '')
hydrogens <- paste('H', i, seq_len(ahn$network$C$Omega[i]), sep = '')
id <- c(id, carbon, hydrogens)
}
nodes <- data.frame(id = id,
shape = 'circle',
shadow = FALSE,
label = label)
}
# CreateEdges creates the data frame for the edges of the network
CreateEdges <- function(ahn) {
}
a <- CreateNodes(ahn)
a
?visNetwork::visEdges
?visNetwork::visNodes
rep('C1', 3)
library(ahnr)
a <- CreateNodes(ahn)
# CreateNodes creates the data frame for the nodes of the network
CreateNodesEdges <- function(ahn) {
label <- vector('numeric')
id <- vector('character')
from <- paste('C', seq_len(ahn$network$n - 1), sep = '')
to <- paste('C', seq_len(ahn$network$n - 1) + 1, sep = '')
for (i in seq_len(ahn$network$n)) {
label <- c(label, ahn$network$H[[paste('molecule', i, sep = "")]][ , 1])
carbon <- paste('C', i, sep = '')
hydrogens <- paste('H', i, seq_len(ahn$network$C$Omega[i]), sep = '')
id <- c(id, carbon, hydrogens)
from <- c(from, rep(carbon, ahn$network$C$Omega[i]))
to <- c(to, hydrogens)
}
nodes <- data.frame(id = id,
shape = 'circle',
shadow = FALSE,
label = label)
edges <- data.frame(from = from,
to = to)
list(nodes = nodes, edges = edges)
}
a <- CreateNodesEdges(ahn)
a$nodes
a$edges
library(ahnr)
devtools::use_package('igraph')
library(ahnr)
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 1000)
devtools::load_all(".")
library(ahnr)
library(ahnr)
plotAHN(ahn)
devtools::load_all(".")
?ahnr::plotAHN
devtools::load_all(".")
library(ahnr)
?ahnr::plotAHN
?ahnr::AHNnD
library(ahnr)
library(ahnr)
?ahnr::plotAHN
??plotAHN
devtools::load_all(".")
?ahnr::plotAHN
library(ahnr)
devtools::load_all(".")
library(ahnr)
?ahnr::plotAHN
devtools::document()
?ahnr::plotAHN
library(ahnr)
?ahnr::plotAHN
plotAHN(ahn)
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 1000)
plotAHN(ahn)
library(ahnr)
plotAHN(ahn)
library(ahnr)
plotAHN(ahn)
plotAHN(ahn)
graph
plotAHN(ahn)
library(ahnr)
plotAHN(ahn)
igraph
graph
vis$nodes$id
library(ahnr)
plotAHN(ahn)
plotAHN(ahn)
graph
?igraph::graph_from_data_frame
actors <- data.frame(name=c("Alice", "Bob", "Cecil", "David",
"Esmeralda"),
age=c(48,33,45,34,21),
gender=c("F","M","F","M","F"))
relations <- data.frame(from=c("Bob", "Cecil", "Cecil", "David",
"David", "Esmeralda"),
to=c("Alice", "Bob", "Alice", "Alice", "Bob", "Alice"),
same.dept=c(FALSE,FALSE,TRUE,FALSE,FALSE,TRUE),
friendship=c(4,5,5,2,1,1), advice=c(4,5,5,4,2,3))
g <- graph_from_data_frame(relations, directed=TRUE, vertices=actors)
actors <- data.frame(name=c("Alice", "Bob", "Cecil", "David",
"Esmeralda"),
age=c(48,33,45,34,21),
gender=c("F","M","F","M","F"))
relations <- data.frame(from=c("Bob", "Cecil", "Cecil", "David",
"David", "Esmeralda"),
to=c("Alice", "Bob", "Alice", "Alice", "Bob", "Alice"),
same.dept=c(FALSE,FALSE,TRUE,FALSE,FALSE,TRUE),
friendship=c(4,5,5,2,1,1), advice=c(4,5,5,4,2,3))
g <- igraph::graph_from_data_frame(relations, directed=TRUE, vertices=actors)
g
?igraph::`V<-`
igraph::V(g)
igraph::V(g)$name
plotAHN(ahn)
igraph::V(graph)
vis$nodes$id
library(ahnr)
plotAHN(ahn)
ggraph::ggraph(graph, layout = 'graphopt') +
ggraph::geom_edge_link() +
ggraph::geom_node_text(label = name)
graph
igraph::V(graph)$name
library(ahnr)
plotAHN(ahn)
vis$edges
vis$nodes
graph
library(ahnr)
plotAHN(ahn)
library(ahnr)
plotAHN(ahn)
?round
round(pi, 3)
signif(pi, 3)
library(ahnr)
plotAHN(ahn)
round(c(pi, pi, pi, pi), 3)
plotAHN(ahn)
library(ahnr)
plotAHN(ahn)
library(ahnr)
plotAHN(ahn)
?ggraph::geom_edge_link
library(ahnr)
plotAHN(ahn)
devtools::use_package('ggplot2')
library(ahnr)
plotAHN(ahn)
library(ahnr)
devtools::document()
library(ahnr)
plotAHN(ahn)
plotAHN(ahn)
devtools::document()
library(ahnr)
plotAHN(ahn)
devtools::use_package('visNetwork')
devtools::document()
library(ahnr)
devtools::document()
devtools::document()
library(ahnr)
devtools::document()
library(ahnr)
plotAHN(ahn)
plotAHNDyn(ahn)
plotAHNDyn(ahn)
vis
vis$nodes
plotAHNDyn(ahn)
plotAHNDyn(ahn)
plotAHN(ahn)
library(ahnr)
library(ahnr)
# Create data
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 1000)
plotAHN(ahn)
plotAHN(ahn)
library(ahnr)
library(ahnr)
# Create data
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 1000)
lm <- lm(y ~ x)
summary(lm)
plotAHN(ahn)
plotAHN(ahn)
plotAHN(ahn)
plotAHN(ahn)
plotAHNDyn(ahn)
# Create data
t <- seq(0, 15, 0.01)
X <- data.frame(x1 = cos(t), x2 = t)
Y <- data.frame(y = sin(t))
# Create the Sigma dataset
Sigma <- list(X = X, Y = Y)
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 500)
# Simulate
ysim <- SimAHNnD(ahn, X)
plot(seq_along(Y$y), Y$y, type = 'l', col = 'black')
lines(seq_along(ysim), ysim, col = 'red')
ahn$network$H$molecule1
lst <- list(x = pi ^ (1:5), y = matrix(rnorm(9), 3))
lst
lst.str
lst['z'] <- 'hola'
lst
lst[['a']] <- 'adios'
lst
ls.str(lst)
str(lst)
writeLines("hello\n\U1F30D")
cat(3)
class(cat(2))
typeof(cat(3))
writeLines("\u0928\u092e\u0938\u094d\u0924\u0947 \u0926\u0941\u0928\u093f\u092f\u093e")
partial <- vector('numeric', 10000)
sum <- 0
for (i in seq_len(10000)) {
sum <- 1/i
for (i in seq_len(10000)) {
sum <- sum + (1/i)
partial[i] <- sum / i}
plot(partial)
partial[10000]
library(ahnr)
library(ahnr)
# Create data
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 1000)
plotAHN(ahn)
plotAHN(ahn)
vis
graph
?igraph::graph_from_data_frame
gr <- graph_from_data_frame(flare$edges, vertices = flare$vertices)
gr <- igraph::graph_from_data_frame(flare$edges, vertices = flare$vertices)
plotAHN(ahn)
graph
summary(graph)
str(graph)
vis
plotAHN(ahn)
plotAHN(ahn)
ggraph(graph, layout = 'graphopt') +
geom_edge_link(aes(start_cap = label_rect(node1.name),
end_cap = label_rect(node2.name))) +
geom_node_text(label = vis$nodes$label) +
theme_void()
ggraph(graph, layout = 'graphopt') +
geom_edge_link(aes(start_cap = label_rect(node1.name),
end_cap = label_rect(node2.name))) +
geom_node_text(label = vis$nodes$label, col = "red") +
theme_void()
node1.name
graph$node1.name
graph
attr(graph)
attributes(graph)
graph[[1]]
graph[[2]]
graph[[3]]
graph[[10]]
graph[[11]]
library(ahnr)
plotAHN(ahn)
plotAHNDyn(ahn)
library(ahnr)
plotAHN(ahn)
vis
devtools::document()
library(ahnr)
plotAHN(ahn)
plotAHN(ahn)
plotAHNDyn(ahn)
devtools::use_package('magrittr')
devtools::document()
library(ahnr)
plotAHNDyn(ahn)
library(ahnr)
plotAHNDyn(ahn)
library(ahnr)
devtools::document()
library(ahnr)
plotAHNDyn(ahn)
library(ahnr)
plotAHNDyn(ahn)
