devtools::use_travis()
devtools::use_vignette('ahn')
devtools::load_all(".")
?devtools::use_package
devtools::use_package('matrixcalc')
devtools::use_package('pracma')
devtools::use_package('purrr')
devtools::use_package('pdist')
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::document()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::document()
devtools::load_all(".")
devtools::document()
?AHNnD
devtools::load_all(".")
devtools::load_all(".")
devtools::document()
# Create data
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
# Create Sigma list
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Train AHN
ahn <- AHNnD(Sigma, 5, 0.01, 2000)
# Test AHN
X <- data.frame(x = x)
ysim <- SimAHNnD(ahn, X)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
ahn <- AHNnD(Sigma, 5, 0.01, 2000)
X <- data.frame(x = x)
ysim <- SimAHNnD(ahn, X)
lines(x, ysim, type = 'l', col = 'red')
devtools::load_all(".")
devtools::load_all(".")
devtools::document()
library(ahnr)
library(ahnr)
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
plot(x, y, type = 'l')
plot(x, y, type = 'l')
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
ahn <- AHNnD(Sigma, 5, 0.01, 100)
devtools::load_all(".")
devtools::document()
devtools::load_all(".")
devtools::document()
library(ahnr)
library(ahnr)
# Create data
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 100)
# Create test data
X <- data.frame(x = x)
ysim <- SimAHNnD(ahn, X)
lines(x, ysim, type = 'l', col = 'red')
library(ahnr)
# Create data
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 100)
# Create test data
X <- data.frame(x = x)
ysim <- SimAHNnD(ahn, X)
plot(x, y, type = 'l')
lines(x, ysim, type = 'l', col = 'red')
library(ahnr)
# Create data
set.seed(12321)
x <- 2 * runif(1000) - 1;
x <- sort(x)
y <- (x < 0.1) * (0.05 * runif(100) + atan(pi*x)) +
(x >= 0.1 & x < 0.6) * (0.05 * runif(1000) + sin(pi*x)) +
(x >= 0.6) * (0.05 * runif(1000) + cos(pi*x))
plot(x, y, type = 'l')
# Create the Sigma dataset
Sigma <- list(X = data.frame(x = x), Y = data.frame(y = y))
# Create network
ahn <- AHNnD(Sigma, 5, 0.01, 100)
ahn <- AHNnD(Sigma, 5, 0.01, 100)
# Create test data
X <- data.frame(x = x)
ysim <- SimAHNnD(ahn, X)
plot(x, y, type = 'l')
lines(x, ysim, type = 'l', col = 'red')
devtools::load_all(".")
devtools::document()
library(ahnr)
library(ahnr)
library(ahnr)
devtools::load_all(".")
devtools::document()
library(ahnr)
devtools::build_win()
devtools::load_all(".")
devtools::document()
library(ahnr)
devtools::document()
devtools::build_win()
sessionInfo()
Sys.setlocale()
Sys.getenv("LC_CTYPE")
